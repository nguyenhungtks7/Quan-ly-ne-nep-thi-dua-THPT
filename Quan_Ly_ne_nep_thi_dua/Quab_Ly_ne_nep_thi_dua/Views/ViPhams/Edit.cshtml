@model Quab_Ly_ne_nep_thi_dua.Models.ViPham

@{
    ViewBag.Title = "Edit";
}
<link href="~/Content/assets/css/giaodiencreateupdate.css" rel="stylesheet" />
<h2>Sửa vi phạm</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdViPham)


        <div class="form-group">
            @Html.Label("Lớp", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.DropDownList("IdLop", ViewBag.LopList as SelectList, "Chọn lớp học", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessage("IdLop", "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.IdHocSinh, "Học sinh", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("IdHocSinh", ViewBag.IdHocSinh as SelectList, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdHocSinh, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.IdHocSinh, "IdHocSinh", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.DropDownList("IdHocSinh", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdHocSinh, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.IdHocSinh, "Học sinh", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("IdHocSinh", Enumerable.Empty<SelectListItem>(), "Chọn học sinh", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdHocSinh, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*<div class="form-group">
                @Html.LabelFor(model => model.LoaiViPham, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LoaiViPham, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LoaiViPham, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.LoaiViPham, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LoaiViPham, new SelectList(
                    new[]
                    {
                        new { Value = "Nghỉ học có phép (loại trừ phải nằm viện)", Text = "Nghỉ học có phép (loại trừ phải nằm viện)" },
                        new { Value = "Học sinh đi học muộn", Text = "Học sinh đi học muộn" },
                        new { Value = "Học sinh nói tục, chửi bậy", Text = "Học sinh nói tục, chửi bậy" },
                        new { Value = "Lớp trực ban muộn", Text = "Lớp trực ban muộn" },
                        new { Value = "Gian lận trong thi cử, kiểm tra", Text = "Gian lận trong thi cử, kiểm tra" }
                    },
                    "Value", "Text"
                ), "Chọn loại vi phạm", htmlAttributes: new { @class = "form-control", id = "ddlLoaiViPham" })
                @Html.ValidationMessageFor(model => model.LoaiViPham, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MoTaViPham, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoTaViPham, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoTaViPham, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.NgayViPham, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NgayViPham, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NgayViPham, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TenTuan, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TenTuan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenTuan, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*<div class="form-group">
                @Html.LabelFor(model => model.NgayViPham, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NgayViPham, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.NgayViPham, "", new { @class = "text-danger" })
                </div>
            </div>*@
@{
        DateTime ngay;
        if (Model.NgayViPham is DateTime)
        {
            ngay = (DateTime)Model.NgayViPham;
        }
     else
     {
         ngay = DateTime.MinValue;
     }
 }
<div class="form-group">
    @Html.LabelFor(model => model.NgayViPham, htmlAttributes: new { @class = "control-label" })
    <div class="col-md-10">
        @Html.TextBox("NgayViPham", ngay.ToString("yyyy-MM-dd"), new { @class = "form-control", type = "date" })
        @Html.ValidationMessageFor(model => model.NgayViPham, "", new { @class = "text-danger" })
    </div>
</div>
    <div class="form-group">
        @Html.LabelFor(model => model.TenTuan, htmlAttributes: new { @class = "control-label" })
        <div class="col-md-10">
            @Html.DropDownList("TenTuan", Enumerable.Range(1, 20).Select(i => new SelectListItem { Text = "Tuần " + i, Value = i.ToString() }), "Chọn tuần", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TenTuan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiemTru, htmlAttributes: new { @class = "control-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiemTru, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.DiemTru, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Lưu" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div class="container">
    <p>
        @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-secondary backlist float-left" })
    </p>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $("#IdLop").change(function () {
            var selectedLop = $(this).val();
            $.ajax({
                url: '@Url.Action("GetHocSinhsByLop", "ViPhams")',
                type: 'GET',
                data: { idLop: selectedLop },
                success: function (data) {
                    // Xóa tất cả các option hiện có trong dropdownlist học sinh
                    $('#IdHocSinh').empty();
                    // Thêm các option mới từ danh sách học sinh
                    $.each(data, function (index, item) {
                        $('#IdHocSinh').append($('<option>', {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                }
            });
        });
    });
    $(document).ready(function () {
        $("#ddlLoaiViPham").change(function () {
            var selectedValue = $(this).val();
            if (selectedValue == "Nghỉ học có phép (loại trừ phải nằm viện)") {
                selectedValue = -1;
            } else if (selectedValue == "Học sinh đi học muộn") {
                selectedValue = -2;
            }
            else if (selectedValue == "Học sinh nói tục, chửi bậy") {
                selectedValue = -5;
            }
            else if (selectedValue == "Lớp trực ban muộn") {
                selectedValue = -10;
            }
            else if (selectedValue == "Gian lận trong thi cử, kiểm tra") {
                selectedValue = -20;
            }
            else {
                selectedValue = 0;
            }
            $("#DiemTru").val(selectedValue);
        });
    });
</script>
