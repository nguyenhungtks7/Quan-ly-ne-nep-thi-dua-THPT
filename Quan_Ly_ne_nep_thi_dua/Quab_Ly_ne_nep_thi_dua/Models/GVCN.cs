//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quab_Ly_ne_nep_thi_dua.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class GVCN
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public GVCN()
        {
            this.Lops = new HashSet<Lop>();
        }

        [Key]
        public int IdGVCN { get; set; }
        [DisplayName("Họ Tên GVCN")]
        [Required(ErrorMessage = "Họ tên GVCN không được để trống.")]
        public string HoTenGVCN { get; set; }

        [DisplayName("Ngày Sinh")]
        [Required(ErrorMessage = "Vui lòng chọn ngày sinh.")]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> NgaySinh { get; set; }

        [DisplayName("Số Điện Thoại")]
        [Required(ErrorMessage = "Số điện thoại không được để trống.")]
        [RegularExpression(@"^\d{10,11}$", ErrorMessage = "Số điện thoại phải có 10 hoặc 11 chữ số.")]
        public string SoDienThoai { get; set; }

        [DisplayName("Email")]
        [Required(ErrorMessage = "Email không được để trống.")]
        [EmailAddress(ErrorMessage = "Địa chỉ email không hợp lệ.")]
        public string Email { get; set; }

        [DisplayName("Giới Tính")]
        [Required(ErrorMessage = "Vui lòng chọn giới tính.")]
        public string GioiTinh { get; set; }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            if (NgaySinh == null)
            {
                yield return new ValidationResult("Vui lòng chọn ngày sinh.", new[] { nameof(NgaySinh) });
            }

            if (string.IsNullOrWhiteSpace(GioiTinh))
            {
                yield return new ValidationResult("Vui lòng chọn giới tính.", new[] { nameof(GioiTinh) });
            }
        }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Lop> Lops { get; set; }
    }
}
