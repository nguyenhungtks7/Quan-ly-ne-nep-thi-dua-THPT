//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quab_Ly_ne_nep_thi_dua.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class HocSinh
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public HocSinh()
        {
            this.ViPhams = new HashSet<ViPham>();
        }

        [Key]
        public int IdHocSinh { get; set; }

        [DisplayName("Họ Tên Học Sinh")]
        [Required(ErrorMessage = "Họ tên học sinh không được để trống.")]
        [StringLength(50, MinimumLength = 5, ErrorMessage = "Họ tên học sinh phải có từ 5 đến 50 ký tự.")]
        public string HoTenHocSinh { get; set; }

        [DisplayName("Ngày Sinh")]
        [Required(ErrorMessage = "Vui lòng chọn ngày sinh.")]
        [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> NgaySinh { get; set; }

        [DisplayName("Giới Tính")]
        [Required(ErrorMessage = "Vui lòng chọn giới tính.")]
        public string GioiTinh { get; set; }

        [DisplayName("Địa Chỉ")]
        [Required(ErrorMessage = "Địa chỉ không được để trống.")]
        [StringLength(50, MinimumLength = 5, ErrorMessage = "Địa chỉ phải có từ 5 đến 50 ký tự.")]
        public string DiaChi { get; set; }

        [DisplayName("Email")]
        [Required(ErrorMessage = "Email học sinh không được để trống.")]
        [EmailAddress(ErrorMessage = "Địa chỉ email không hợp lệ.")]
        public string Email { get; set; }

        [DisplayName("ID Lớp")]
        public Nullable<int> IdLop { get; set; }

        public virtual Lop Lop { get; set; }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            if (NgaySinh == null)
            {
                yield return new ValidationResult("Vui lòng chọn ngày sinh.", new[] { nameof(NgaySinh) });
            }

            if (string.IsNullOrWhiteSpace(GioiTinh))
            {
                yield return new ValidationResult("Vui lòng chọn giới tính.", new[] { nameof(GioiTinh) });
            }
        }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ViPham> ViPhams { get; set; }
    }
}
